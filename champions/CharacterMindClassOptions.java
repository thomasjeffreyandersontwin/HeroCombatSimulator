/*
 * CharacterMindClassOptions.java
 *
 * Created on December 31, 2003, 3:20 PM
 */

package champions;

import champions.interfaces.MutableListModel;
import champions.interfaces.TargetOptions;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListModel;
import tjava.ToggleSelectionModel;

/**
 *
 * @author  1425
 */
public class CharacterMindClassOptions extends JPanel implements TargetOptions {
    
    Target target;
    AddClassActionListener actionListener;
    
    /** Creates new form CharacterMindClassOptions */
    public CharacterMindClassOptions() {
        initComponents();
        
        JPanel customPanel = new JPanel();
        
        JButton b = new JButton("Add Class of Mind...");
         actionListener = new CharacterMindClassOptions.AddClassActionListener();
        
        b.addActionListener( actionListener);
            
        customPanel.add(b);
        
        classPopupList.setCustomPopupControls(customPanel);
        classPopupList.setSelectionModel( new ToggleSelectionModel() );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        classPopupList = new tjava.PopupList();

        setLayout(new java.awt.GridBagLayout());

        classPopupList.setMinimumListSize(new java.awt.Dimension(200, 100));
        classPopupList.setMinimumSize(new java.awt.Dimension(200, 100));
        classPopupList.setName("Class of Mind");
        classPopupList.setPreferredSize(new java.awt.Dimension(200, 100));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        add(classPopupList, gridBagConstraints);

    }//GEN-END:initComponents

    public void apply() {
        saveFields();
    }    
    
    public void cancelled() {
    }    
    
    public void close() {
    }
    
    public String getOptionName() {
        return "Class of Mind";
    }
    
    public JPanel getOptionsPanel() {
        return this;
    }
    
    public void setTarget(Target target) {
        this.target = target;
        
        MutableListModel model = buildListModel(target);
        actionListener.setListModel(model);
        
        classPopupList.setModel( model );
        
        updateFields();
    }
    
    private MutableListModel buildListModel(Target source) {
        String[] classOfMinds = { "Human", "Animal", "Machine","Alien" };
        
        ArrayListModel alm = new ArrayListModel();
        
        for(int i = 0; i < classOfMinds.length; i++ ) {
            alm.addElement( classOfMinds[i] );
        }
        
        if ( source == null ) {
            return alm;
        }
        else {
            int size = source.getIndexedSize("ClassOfMind");
            
            for(int i = 0; i < size; i++) {
                if ( alm.contains( source.getIndexedValue(i, "ClassOfMind", "NAME") ) == false ) {
                    alm.addElement(source.getIndexedValue(i, "ClassOfMind", "NAME") );
                }
            }
            
            return alm;
        }
        
    }
    
    public void updateFields() {
        classPopupList.clearSelection();
        
        ListModel lm = classPopupList.getModel();
        int count = lm.getSize();
        for(int i = 0; i < count; i++) {
            if ( target.findIndexed("ClassOfMind", "NAME", lm.getElementAt(i) ) != -1 ) {
                classPopupList.setSelectedIndex(i);
            }
        }
    }
    
    public void saveFields() {
        target.removeAll("ClassOfMind");
        
        ListModel lm = classPopupList.getModel();
        int count = lm.getSize();
        for(int i = 0; i < count; i++) {
            if ( classPopupList.isSelectedIndex(i) ) {
                target.addClassOfMind( (String) lm.getElementAt(i) );
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private tjava.PopupList classPopupList;
    // End of variables declaration//GEN-END:variables
    
    static class AddClassActionListener implements ActionListener {
        
        private MutableListModel listModel = null;
        
        AddClassActionListener() {
            
        }
        
        public void actionPerformed(ActionEvent e) {
            if ( listModel != null ) {
                String newClass = JOptionPane.showInputDialog(null, "Enter New Class", "<New Class>");
                
                if ( newClass != null ) {
                    listModel.addElement(newClass, -1);
                }
                
            }
        }
        /** Getter for property listModel.
         * @return Value of property listModel.
         *
         */
        public MutableListModel getListModel() {
            return listModel;
        }
        
        /** Setter for property listModel.
         * @param listModel New value of property listModel.
         *
         */
        public void setListModel(MutableListModel listModel) {
            this.listModel = listModel;
        }
        
    }
}
