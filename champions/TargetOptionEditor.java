/*
 * TargetOptionPanel.java
 *
 * Created on December 31, 2003, 2:10 PM
 */

package champions;

import champions.interfaces.TargetOptions;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author  1425
 */
public class TargetOptionEditor extends JPanel {
    
    private ArrayList targetOptions;
    private JFrame optionsWindow;
    
    /** Creates new form TargetOptionPanel */
    public TargetOptionEditor() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        optionsTab = new javax.swing.JTabbedPane();
        controlGroup = new javax.swing.JPanel();
        okayButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        add(optionsTab, java.awt.BorderLayout.CENTER);

        controlGroup.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        okayButton.setText("OK");
        okayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okayButtonActionPerformed(evt);
            }
        });

        controlGroup.add(okayButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        controlGroup.add(cancelButton);

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        controlGroup.add(applyButton);

        add(controlGroup, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        // Add your handling code here:
        applyChanges();
    }//GEN-LAST:event_applyButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Add your handling code here:
        cancelChanges();
        close();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okayButtonActionPerformed
        // Add your handling code here:
        applyChanges();
        close();
    }//GEN-LAST:event_okayButtonActionPerformed

    /** Getter for property targetOptions.
     * @return Value of property targetOptions.
     *
     */
    public ArrayList getTargetOptions() {
        return targetOptions;
    }    
    
    /** Setter for property targetOptions.
     * @param targetOptions New value of property targetOptions.
     *
     */
    public void setTargetOptions(ArrayList targetOptions) {
        if ( this.targetOptions != null && this.targetOptions != targetOptions ) {
            cancelChanges();
        }
       
        if ( this.targetOptions != targetOptions ) {
            this.targetOptions = targetOptions;

            resetTabs();
        }
    }    
    
    public void applyChanges() {
        if ( targetOptions != null ) {
            Iterator i = targetOptions.iterator();
            while(i.hasNext()) {
                TargetOptions to = (TargetOptions)i.next();
                to.apply();
            }
        }
    }
    
    public void cancelChanges() {
        if ( targetOptions != null ) {
            Iterator i = targetOptions.iterator();
            while(i.hasNext()) {
                TargetOptions to = (TargetOptions)i.next();
                to.cancelled();
            }
        }
    }
    
    public void close() {
        if ( targetOptions != null ) {
            Iterator i = targetOptions.iterator();
            while(i.hasNext()) {
                TargetOptions to = (TargetOptions)i.next();
                to.close();
            }
        }
        
        if ( optionsWindow != null ) {
            optionsWindow.setVisible(false);
        }
    }
    
    /** Getter for property optionsWindow.
     * @return Value of property optionsWindow.
     *
     */
    public JFrame getOptionsWindow() {
        return optionsWindow;
    }
    
    /** Setter for property optionsWindow.
     * @param optionsWindow New value of property optionsWindow.
     *
     */
    public void setOptionsWindow(JFrame optionsWindow) {
        this.optionsWindow = optionsWindow;
    }
    
    private void resetTabs() {
        // resets all of the tabs
        optionsTab.removeAll();
        
        if ( targetOptions != null ) {
            Iterator i = targetOptions.iterator();
            while(i.hasNext()) {
                TargetOptions to = (TargetOptions)i.next();
                JPanel p = to.getOptionsPanel();
                String name = to.getOptionName();
                
                optionsTab.add(name, p);
            }
        }
    }
    
    public static JFrame showTargetOptionPanel(Target target, ArrayList targetOptionsList) {
        JFrame frame = new JFrame(target.getName() + " Options");
        TargetOptionEditor toe = new TargetOptionEditor();

        if ( targetOptionsList != null ) {
            Iterator i = targetOptionsList.iterator();
            while(i.hasNext()) {
                TargetOptions to = (TargetOptions)i.next();
                to.setTarget(target);
            }
        }
        
        toe.setTargetOptions(targetOptionsList);
        toe.setOptionsWindow(frame);
        
        frame.getContentPane().add(toe, BorderLayout.CENTER);
        frame.pack();
        
        setLocationToCenter(frame);
        
        frame.setVisible(true);
        
        return frame;
    }
    
    public static void setLocationToCenter(JFrame frame) {
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension m = frame.getSize();
        d.width -= m.width;
        d.height -= m.height;
        d.width /= 2;
        d.height /= 2;

        if ( d.width < 0 ) d.width = 0;
        if ( d.height < 0 ) d.height = 0;
        
        frame.setLocation (d.width,d.height);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel controlGroup;
    private javax.swing.JButton okayButton;
    private javax.swing.JTabbedPane optionsTab;
    // End of variables declaration//GEN-END:variables
    
}
