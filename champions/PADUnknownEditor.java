/*
 * PADDiceEditor.java
 *
 * Created on October 9, 2000, 2:47 PM
 */

package champions;

import java.beans.*;
import champions.interfaces.*;
/**
 *
 * @author  unknown
 * @version
 */
public class PADUnknownEditor extends PADAbstractEditor {

    /** Holds value of property description. */
    private String description;
    /** Holds value of property propertyName. */
    private String propertyName;
    /** Holds value of property value. */
    private String value = "TRUE";
    /** Creates new form PADDiceEditor */
    public PADUnknownEditor(String key,String desc,PADValueListener l) {
        initComponents ();

        setDescription(desc);
        setPropertyName(key);

        addPADValueListener(l);
    }

    public PADUnknownEditor(String name,String desc,String type,PADValueListener l) {
        this(name, desc, l);

        //setValue(initial);

        descriptionText.setText("Error: Unknown Editor Type for [" + desc + "], type [" + type + "]");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents () {//GEN-BEGIN:initComponents
        descriptionText = new javax.swing.JLabel ();
        setLayout (new java.awt.GridBagLayout ());
        java.awt.GridBagConstraints gridBagConstraints1;

        descriptionText.setText ("jLabel1");


        gridBagConstraints1 = new java.awt.GridBagConstraints ();
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints1.weightx = 1.0;
        add (descriptionText, gridBagConstraints1);

    }//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel descriptionText;
    // End of variables declaration//GEN-END:variables

    /** Getter for property description.
     * @return Value of property description.
     */
    public String getDescription() {
        return description;
    }
    /** Setter for property description.
     * @param description New value of property description.
     */
    public void setDescription(String description) {
        this.description = description;
        descriptionText.setText( description );
    }
    /** Getter for property propertyName.
     * @return Value of property propertyName.
     */
    public String getPropertyName() {
        return propertyName;
    }
    /** Setter for property propertyName.
     * @param propertyName New value of property propertyName.
     */
    public void setPropertyName(String propertyName) {
        this.propertyName = propertyName;
    }
    /** Getter for property value.
     * @return Value of property value.
     */
    public String getValue() {
        return value;
    }
    /** Setter for property value.
     * @param value New value of property value.
     */
    public void setValue(String value) {

    }

    public void setValue(Object o) {
    }
    
}