/*
 * CharacterSizeOptions.java
 *
 * Created on December 31, 2003, 2:49 PM
 */

package champions;

import champions.interfaces.TargetOptions;
import javax.swing.JPanel;

/**
 *
 * @author  1425
 */
public class CharacterMiscOptions extends JPanel implements TargetOptions {
    Target target;
    
    /** Creates new form CharacterSizeOptions */
    public CharacterMiscOptions() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        heightField = new javax.swing.JTextField();
        heightLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        weightField = new javax.swing.JTextField();
        weightLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        eyeColorField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        hairColorField = new javax.swing.JTextField();
        fillerPanel = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(0, 2, 0, 2)));
        jLabel1.setText("Base Height");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jLabel1, gridBagConstraints);

        heightField.setMinimumSize(new java.awt.Dimension(100, 20));
        heightField.setPreferredSize(new java.awt.Dimension(50, 20));
        heightField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heightFieldActionPerformed(evt);
            }
        });
        heightField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                heightFieldFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(heightField, gridBagConstraints);

        heightLabel.setText(" meters");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        add(heightLabel, gridBagConstraints);

        jLabel2.setText("Base Weight");
        add(jLabel2, new java.awt.GridBagConstraints());

        weightField.setPreferredSize(new java.awt.Dimension(50, 20));
        weightField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightFieldActionPerformed(evt);
            }
        });
        weightField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                weightFieldFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(weightField, gridBagConstraints);

        weightLabel.setText(" kg");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(weightLabel, gridBagConstraints);

        jLabel3.setText("Eye Color");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(eyeColorField, gridBagConstraints);

        jLabel4.setText("Hair Color");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(hairColorField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(fillerPanel, gridBagConstraints);

    }//GEN-END:initComponents

    private void weightFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_weightFieldFocusLost
        
        updatePanel();
    }//GEN-LAST:event_weightFieldFocusLost

    private void weightFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightFieldActionPerformed
        
        updatePanel();
    }//GEN-LAST:event_weightFieldActionPerformed

    private void heightFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_heightFieldFocusLost
        
        updatePanel();
    }//GEN-LAST:event_heightFieldFocusLost

    private void heightFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heightFieldActionPerformed
        
        updatePanel();
    }//GEN-LAST:event_heightFieldActionPerformed

    
    public void apply() {
        saveFields();
    }
    
    public void cancelled() {
    }
    
    public void close() {
    }
    
    public String getOptionName() {
        return "Background";
    }
    
    public JPanel getOptionsPanel() {
        return this;
    }
    
    public void setTarget(Target target) {
        this.target = target;
        
        updateFields();
    }
    
    private void updateFields() {
        double height = target.getBaseHeight();
        double weight = target.getBaseWeight();
        
        heightField.setText( Double.toString(height) );
        weightField.setText( Double.toString(weight) );

        eyeColorField.setText( ((Character)target).getEyeColor() );
        hairColorField.setText( ((Character)target).getHairColor());

        updatePanel();
    }
    
    private void updatePanel() {
        
        try {
            double height = Double.parseDouble( heightField.getText() );
            int i = (int)Math.round(height * 39.3700787);
            int f = (int)Math.floor( i / 12 );
            i = i - f * 12;
            heightLabel.setText(" meters (" + f + "'" + i + "\")");
        }
        catch(NumberFormatException nfe) {
        }
        
        try {
            double weight = Double.parseDouble( weightField.getText() );
            double p = Math.floor(weight / 0.45359237);
            weightLabel.setText(" kg (" + p + " lbs.)");;
        }
        catch(NumberFormatException nfe) {
            
        }
    }
    
    private void saveFields() {
        try {
            double height = Double.parseDouble(heightField.getText());
            target.setBaseHeight(height);
        }
        catch( NumberFormatException nfe ) {
            
        }
        
        try {
            double weight = Double.parseDouble(weightField.getText());
            target.setBaseWeight(weight);
        }
        catch( NumberFormatException nfe ) {
            
        }
        
        ((Character)target).setEyeColor( eyeColorField.getText());
        ((Character)target).setHairColor( hairColorField.getText());
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField eyeColorField;
    private javax.swing.JPanel fillerPanel;
    private javax.swing.JTextField hairColorField;
    private javax.swing.JTextField heightField;
    private javax.swing.JLabel heightLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField weightField;
    private javax.swing.JLabel weightLabel;
    // End of variables declaration//GEN-END:variables
    
}
