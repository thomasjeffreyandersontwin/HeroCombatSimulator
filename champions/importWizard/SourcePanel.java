/*
 * SourceWizard.java
 *
 * Created on July 6, 2001, 8:31 PM
 */

package champions.importWizard;
import champions.*;
import champions.interfaces.*;
import champions.exception.*;
import javax.swing.*;
/**
 *
 * @author  twalker
 * @version 
 */
public class SourcePanel extends javax.swing.JPanel implements WizardPanel {

    private Wizard wizard;
    private WizardPanel nextPanel;
    
    /** Creates new form SourceWizard */
    public SourcePanel() {
        initComponents ();
        
        ButtonGroup bg = new ButtonGroup();
        bg.add(fromFileRadio);
        bg.add(fromTextRadio);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        title = new javax.swing.JLabel();
        fromFileRadio = new javax.swing.JRadioButton();
        fromFileGroup = new javax.swing.JPanel();
        fromFileLabel = new javax.swing.JLabel();
        fromFileField = new javax.swing.JTextField();
        fromFileButton = new javax.swing.JButton();
        fromTextRadio = new javax.swing.JRadioButton();
        fromTextGroup = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fromTextArea = new javax.swing.JTextArea();
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        title.setText("Specify the Filtered Character Source");
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(title, gridBagConstraints1);
        
        
        fromFileRadio.setText("Import Filtered Text File");
        fromFileRadio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fromFileRadioItemStateChanged(evt);
            }
        }
        );
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.weightx = 1.0;
        add(fromFileRadio, gridBagConstraints1);
        
        
        fromFileGroup.setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints2;
        
        fromFileLabel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(0, 5, 0, 5)));
          fromFileLabel.setText("Filter File");
          gridBagConstraints2 = new java.awt.GridBagConstraints();
          gridBagConstraints2.anchor = java.awt.GridBagConstraints.EAST;
          fromFileGroup.add(fromFileLabel, gridBagConstraints2);
          
          
        fromFileField.addActionListener(new java.awt.event.ActionListener() {
              public void actionPerformed(java.awt.event.ActionEvent evt) {
                  jTextField1ActionPerformed(evt);
              }
          }
          );
          fromFileField.addFocusListener(new java.awt.event.FocusAdapter() {
              public void focusGained(java.awt.event.FocusEvent evt) {
                  fromFileFieldFocusGained(evt);
              }
          }
          );
          gridBagConstraints2 = new java.awt.GridBagConstraints();
          gridBagConstraints2.fill = java.awt.GridBagConstraints.HORIZONTAL;
          gridBagConstraints2.weightx = 1.0;
          gridBagConstraints2.weighty = 1.0;
          fromFileGroup.add(fromFileField, gridBagConstraints2);
          
          
        fromFileButton.setText("Browse...");
          fromFileButton.addActionListener(new java.awt.event.ActionListener() {
              public void actionPerformed(java.awt.event.ActionEvent evt) {
                  fromFileButtonActionPerformed(evt);
              }
          }
          );
          gridBagConstraints2 = new java.awt.GridBagConstraints();
          gridBagConstraints2.gridwidth = 0;
          fromFileGroup.add(fromFileButton, gridBagConstraints2);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.insets = new java.awt.Insets(0, 15, 0, 0);
        add(fromFileGroup, gridBagConstraints1);
        
        
        fromTextRadio.setText("Import Filtered Text");
        fromTextRadio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fromTextRadioItemStateChanged(evt);
            }
        }
        );
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.weightx = 1.0;
        add(fromTextRadio, gridBagConstraints1);
        
        
        fromTextGroup.setLayout(new java.awt.BorderLayout());
        
        
          fromTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    fromTextAreaFocusGained(evt);
                }
            }
            );
            jScrollPane1.setViewportView(fromTextArea);
            
            fromTextGroup.add(jScrollPane1, java.awt.BorderLayout.CENTER);
          
          
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.insets = new java.awt.Insets(0, 15, 0, 0);
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        add(fromTextGroup, gridBagConstraints1);
        
    }//GEN-END:initComponents

  private void fromFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromFileButtonActionPerformed
// Add your handling code here:
        MyFileChooser chooser = MyFileChooser.chooser;
   //     MyFileFilter mff = new MyFileFilter( new String[]{"hcs"}, "HCS Character File");
    //    chooser.setFileFilter(mff);
        chooser.setFileFilter(null);
        chooser.setDialogTitle( "Choose Filter File" );
        
        int returnVal = chooser.showOpenDialog(null);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
                fromFileField.setText( chooser.getSelectedFile().toString() );
                fromFileRadio.setSelected(true);
        }
  }//GEN-LAST:event_fromFileButtonActionPerformed

  private void fromTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fromTextAreaFocusGained
// Add your handling code here:
      fromTextRadio.setSelected(true);
  }//GEN-LAST:event_fromTextAreaFocusGained

  private void fromFileFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fromFileFieldFocusGained
// Add your handling code here:
      fromFileRadio.setSelected(true);
  }//GEN-LAST:event_fromFileFieldFocusGained

  private void fromTextRadioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fromTextRadioItemStateChanged
// Add your handling code here:
    //  fromTextArea.setEnabled( fromTextRadio.isSelected() );
      
      if ( fromTextRadio.isSelected() && wizard != null ) {
          wizard.getParameters().add( "Source.TYPE", "TEXT", true );
          wizard.getParameters().add( "Source.TEXT", fromTextArea.getText() , true);
      }
          
  }//GEN-LAST:event_fromTextRadioItemStateChanged

  private void fromFileRadioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fromFileRadioItemStateChanged
// Add your handling code here:
      
    //  fromFileField.setEnabled( fromFileRadio.isSelected() );
     // fromFileButton.setEnabled( fromFileRadio.isSelected() );
      
      if ( fromFileRadio.isSelected() && wizard != null ) {
          wizard.getParameters().add( "Source.TYPE", "FILE", true );
          wizard.getParameters().add( "Source.FILENAME", fromFileField.getText() , true);
      }
  }//GEN-LAST:event_fromFileRadioItemStateChanged

  private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
// Add your handling code here:
  }//GEN-LAST:event_jTextField1ActionPerformed

    public JPanel getPanel() {
        return this;
    }    

    public void setWizard(Wizard wizard) {
        this.wizard = wizard;
    }
    
    public void enterPanel() throws WizardException {
        if ( nextPanel == null ) nextPanel = new ErrorPanel();
         wizard.setNextPanel( nextPanel );
         
         String type = wizard.getParameters().getStringValue("Source.TYPE");
         if ( type == null || type.equals("FILE") ) {
             fromFileRadio.setSelected(true);
             fromFileField.setText(wizard.getParameters().getStringValue("Source.FILENAME") );
         }
         else {
             // Text
             fromTextRadio.setSelected(true);
             fromTextArea.setText(wizard.getParameters().getStringValue("Source.TEXT") );
         }
    }
    
    public void exitPanel() {
         String type = wizard.getParameters().getStringValue("Source.TYPE");
         if ( type == null || type.equals("FILE") ) {
         wizard.getParameters().add( "Source.TYPE", "FILE", true );
             wizard.getParameters().add( "Source.FILENAME", fromFileField.getText() , true);
         }
         else {
             // Text
             wizard.getParameters().add( "Source.TEXT", fromTextArea.getText() , true);
         }
    }
    
    public void abortPanel() {
    }
    
    public void destroy() {
        nextPanel = null;
        wizard = null;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel title;
    private javax.swing.JRadioButton fromFileRadio;
    private javax.swing.JPanel fromFileGroup;
    private javax.swing.JLabel fromFileLabel;
    private javax.swing.JTextField fromFileField;
    private javax.swing.JButton fromFileButton;
    private javax.swing.JRadioButton fromTextRadio;
    private javax.swing.JPanel fromTextGroup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea fromTextArea;
    // End of variables declaration//GEN-END:variables

}
