/*
 * GenericEffectEditor.java
 *
 * Created on December 2, 2000, 5:52 PM
 */

package champions;

import java.beans.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import champions.powers.*;
/**
 *
 * @author  trewalke
 * @version 
 */
public class GenericEffectDetail extends javax.swing.JPanel 
implements PropertyChangeListener {

    /** Holds value of property effect. */
    private effectGeneric effect;
    private JFrame window;
    /** Creates new form GenericEffectEditor */
    public GenericEffectDetail() {
        initComponents ();
            removeButton.setAction( new AbstractAction( "Remove Effect" ) {
            public void actionPerformed(ActionEvent e) {
                if ( Battle.currentBattle != null && GenericEffectDetail.this.getEffect() != null ) {
                    BattleEvent be = new BattleEvent(BattleEvent.REMOVE_EFFECT, GenericEffectDetail.this.effect, GenericEffectDetail.this.effect.getTarget());
                    Battle.currentBattle.addEvent( be );
                    if ( window != null ) window.dispose();
                    //setVisible(true);
                }
            }
        });
    }

    public GenericEffectDetail(effectGeneric effect) {
        initComponents ();
        setEffect(effect);

        removeButton.setAction( new AbstractAction( "Remove Effect" ) {
            public void actionPerformed(ActionEvent e) {
                if ( Battle.currentBattle != null && GenericEffectDetail.this.getEffect() != null ) {
                    BattleEvent be = new BattleEvent(BattleEvent.REMOVE_EFFECT, GenericEffectDetail.this.effect, GenericEffectDetail.this.effect.getTarget());
                    Battle.currentBattle.addEvent( be );
                    if ( window != null ) window.dispose();
                }
            }
        });        
        setEffect(effect);
    }
    
    public void updateFields() {
        if ( effect != null ) {
            nameField.setText( effect.getName() );
            descriptionField.setText( effect.getDescription() );
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents () {//GEN-BEGIN:initComponents
        nameLabel = new javax.swing.JLabel ();
        nameField = new javax.swing.JTextField ();
        descriptionLabel = new javax.swing.JLabel ();
        descriptionField = new javax.swing.JTextArea ();
        buttonGroup = new javax.swing.JPanel ();
        removeButton = new champions.HTMLButton ();
        closeButton = new champions.HTMLButton ();
        setLayout (new java.awt.GridBagLayout ());
        java.awt.GridBagConstraints gridBagConstraints1;

        nameLabel.setText ("Name");


        gridBagConstraints1 = new java.awt.GridBagConstraints ();
        add (nameLabel, gridBagConstraints1);

        nameField.setText ("New Effect");
        nameField.addActionListener (new java.awt.event.ActionListener () {
            public void actionPerformed (java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed (evt);
            }
        }
        );
        nameField.addFocusListener (new java.awt.event.FocusAdapter () {
            public void focusGained (java.awt.event.FocusEvent evt) {
                nameFieldFocusGained (evt);
            }
            public void focusLost (java.awt.event.FocusEvent evt) {
                nameFieldFocusLost (evt);
            }
        }
        );


        gridBagConstraints1 = new java.awt.GridBagConstraints ();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.insets = new java.awt.Insets (0, 5, 0, 0);
        add (nameField, gridBagConstraints1);

        descriptionLabel.setText ("Description");


        gridBagConstraints1 = new java.awt.GridBagConstraints ();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add (descriptionLabel, gridBagConstraints1);

        descriptionField.setPreferredSize (new java.awt.Dimension(100, 100));
        descriptionField.addFocusListener (new java.awt.event.FocusAdapter () {
            public void focusLost (java.awt.event.FocusEvent evt) {
                descriptionFieldFocusLost (evt);
            }
        }
        );


        gridBagConstraints1 = new java.awt.GridBagConstraints ();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.insets = new java.awt.Insets (0, 5, 0, 0);
        gridBagConstraints1.weightx = 1.0;
        gridBagConstraints1.weighty = 1.0;
        add (descriptionField, gridBagConstraints1);


          removeButton.setText ("Remove Effect");
  
          buttonGroup.add (removeButton);
  
          closeButton.setText ("Close Effect");
  
          buttonGroup.add (closeButton);
  

        gridBagConstraints1 = new java.awt.GridBagConstraints ();
        gridBagConstraints1.gridwidth = 0;
        gridBagConstraints1.gridheight = 0;
        add (buttonGroup, gridBagConstraints1);

    }//GEN-END:initComponents

  private void descriptionFieldFocusLost (java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descriptionFieldFocusLost
// Add your handling code here:
    if ( effect != null ) {
        effect.setDescription(descriptionField.getText() );
    }
  }//GEN-LAST:event_descriptionFieldFocusLost

  private void nameFieldFocusLost (java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusLost
// Add your handling code here:
        if ( effect != null ) {
        effect.setName(nameField.getText() );
    }
  }//GEN-LAST:event_nameFieldFocusLost

  private void nameFieldFocusGained (java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusGained
// Add your handling code here:
  }//GEN-LAST:event_nameFieldFocusGained

  private void nameFieldActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
// Add your handling code here:
        if ( effect != null ) {
        effect.setName(nameField.getText() );
    }
  }//GEN-LAST:event_nameFieldActionPerformed


// Variables declaration - do not modify//GEN-BEGIN:variables
private javax.swing.JLabel nameLabel;
private javax.swing.JTextField nameField;
private javax.swing.JLabel descriptionLabel;
private javax.swing.JTextArea descriptionField;
private javax.swing.JPanel buttonGroup;
private champions.HTMLButton removeButton;
private champions.HTMLButton closeButton;
// End of variables declaration//GEN-END:variables

/** Getter for property effect.
 * @return Value of property effect.
 */
public Effect getEffect() {
    return effect;
}
/** Setter for property effect.
 * @param effect New value of property effect.
 */
public void setEffect(effectGeneric effect) {
    if ( this.effect != null ) {
        this.effect.removePropertyChangeListener(this);
    }
    this.effect = effect;
    updateFields();
        if ( this.effect != null ) {
        this.effect.addPropertyChangeListener(this);
    }
}
public void propertyChange(final java.beans.PropertyChangeEvent p1) {
    updateFields();
}

    public void showEffectDetail( Point inPoint ) {
        window = new JFrame();
        window.getContentPane().add(this);
        closeButton.addActionListener( new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                window.dispose();
            }
        });
        window.pack();
        if ( inPoint != null ) window.setLocation(inPoint);
        window.setVisible(true);
    }
}