/*
 * ErrorTreeFrame.java
 *
 * Created on September 27, 2007, 9:56 AM
 */

package champions.ioAdapter.heroDesigner.errorTree;

import champions.ChampionsUtilities;
import champions.Target;
import javax.swing.SwingUtilities;
import xml.XMLParseErrorList;

/**
 *
 * @author  twalker
 */
public class ErrorTreeFrame extends javax.swing.JFrame {
    
    static protected ErrorTreeFrame frame;
    
    public static ErrorTreeFrame getErrorTreeFrame() {
        if ( frame == null ) frame = new ErrorTreeFrame();

        
        return frame;
    }
    
    public static void displayImportError(Target target, XMLParseErrorList errorList, String fileName) {
        final ErrorTreeFrame frame = getErrorTreeFrame();
        
        frame.errorTree.addErrorEntry(target, errorList, fileName);
        
        if ( frame.isVisible() == false ) {
            SwingUtilities.invokeLater( new Runnable() {
                public void run() {
                    frame.pack();
                    ChampionsUtilities.centerWindow(frame);
                    frame.setVisible(true);
                }
            });
        }
    }
    
    /** Creates new form ErrorTreeFrame */
    public ErrorTreeFrame() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        errorTree = new champions.ioAdapter.heroDesigner.errorTree.ErrorTree();

        setTitle("Hero Designer Import Errors");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        jScrollPane1.setViewportView(errorTree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden

        errorTree.clearErrors();
    }//GEN-LAST:event_formComponentHidden

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

        errorTree.clearErrors();
    }//GEN-LAST:event_formWindowClosed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ErrorTreeFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private champions.ioAdapter.heroDesigner.errorTree.ErrorTree errorTree;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
}
