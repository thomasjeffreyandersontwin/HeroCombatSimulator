/*
 * GenericAbilityConfigurePanel.java
 *
 * Created on October 31, 2001, 11:53 PM
 */

package champions.attackTree;

import champions.Ability;
import champions.BattleEvent;
import champions.abilityTree.PADTree.PADTreeTableNode;
import champions.interfaces.ChampionsConstants;
import java.awt.event.MouseAdapter;
import javax.swing.JPanel;
import javax.swing.tree.TreePath;
import java.awt.event.MouseEvent;

/**
 *
 * @author  twalker
 */
public class GenericAbilityConfigurePanel extends JPanel implements AttackTreeInputPanel, ChampionsConstants {
    /** Stores a cached GenericAbilityConfigurePanel which can be reused. */
    static protected GenericAbilityConfigurePanel ad = null;
    
    protected AttackTreePanel atip;
    
    /** Currently Ability being edited. */
    protected Ability ability;
    
    /** Determines whether Ability Modifiers are allowed to be modified.
     *
     * Ability Modifiers include Limitations, Advantages, Special Effects,
     * and Special Parameters.
     */
    boolean modifiersShown;
    
    /** Creates new form GenericAbilityConfigurePanel */
    public GenericAbilityConfigurePanel() {
        initComponents();
        padTreeTable.setMask( ADVANTAGE_MASK | LIMITATION_MASK | SPECIAL_EFFECTS_MASK | SPECIAL_PARAMETERS_MASK);
        padTreeTable.setAbilityTreeTable( abilityEditor.getAbilityTree() );
        
        
        // instructionLabel.setText("Set Attack Parameters");
        
        setupActions();
        
      
    }
    
    public void setupActions() {
        
    }
    
    static public GenericAbilityConfigurePanel getGenericAbilityConfigurePanel(Ability ability, boolean modifiersShown) {
        if ( ad == null ) ad = new GenericAbilityConfigurePanel();
        
        ad.setAbility(ability);
        ad.setModifiersShown(modifiersShown);
               
        return ad;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        padScrollPane = new javax.swing.JScrollPane();
        padTreeTable = new champions.abilityTree.PADTree.PADTreeTable();
        abilityEditor = new champions.AbilityEditor();

        jSplitPane1.setDividerSize(3);
        jSplitPane1.setResizeWeight(0.8);

        padScrollPane.setViewportView(padTreeTable);

        jSplitPane1.setRightComponent(padScrollPane);
        jSplitPane1.setLeftComponent(abilityEditor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
                                
    public void showPanel(AttackTreePanel atip) {
        this.atip = atip;
        setupPanel();
    }
    
    public JPanel getPanel() {
        return this;
    }
    
    public void hidePanel() {
        
    }

    
    public void setupPanel() {
    }
    
    /** Getter for property ability.
     * @return Value of property ability.
     *
     */
    public Ability getAbility() {
        return ability;
    }
    
    /** Setter for property ability.
     * @param ability New value of property ability.
     *
     */
    public void setAbility(Ability ability) {
        this.ability = ability;
        
        abilityEditor.setAbility(ability);
    }
    
    /** Getter for property modifiersShown.
     * @return Value of property modifiersShown.
     *
     */
    public boolean isModifiersShown() {
        return modifiersShown;
    }
    
    /** Setter for property modifiersShown.
     * @param modifiersShown New value of property modifiersShown.
     *
     */
    public void setModifiersShown(boolean modifiersShown) {
        this.modifiersShown = modifiersShown;
        padScrollPane.setVisible(modifiersShown);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private champions.AbilityEditor abilityEditor;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JScrollPane padScrollPane;
    private champions.abilityTree.PADTree.PADTreeTable padTreeTable;
    // End of variables declaration//GEN-END:variables
    
}
