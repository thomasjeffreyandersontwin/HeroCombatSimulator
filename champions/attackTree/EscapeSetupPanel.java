/*
 * ToHitPanel.java
 *
 * Created on November 11, 2001, 9:09 PM
 */

package champions.attackTree;

import champions.BattleEvent;
import champions.interfaces.ChampionsConstants;
import javax.swing.JPanel;

/**
 *
 * @author  twalker
 */
public class EscapeSetupPanel extends JPanel implements AttackTreeInputPanel, ChampionsConstants {
    /** Stores the static, default toHit panel. */
    static private EscapeSetupPanel defaultPanel = null;
    
    private AttackTreePanel atip = null;

        
    /** Holds value of property battleEvent. */
    private BattleEvent battleEvent;
    
    /** Creates new form ToHitPanel */
    public EscapeSetupPanel() {
        initComponents();
        
        comboEditor.setDescription( "Grab to Escape from" );
    }
    
    static public EscapeSetupPanel getDefaultPanel(BattleEvent be, Object[] list, Object currentValue) {
        if ( defaultPanel == null ) defaultPanel = new EscapeSetupPanel();
        
        defaultPanel.setBattleEvent(be);
        defaultPanel.setList(list);
        defaultPanel.setValue(currentValue);
        
        return defaultPanel;
    }
    
    public void setupPanel() {

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        challengerGroup = new javax.swing.JPanel();
        comboEditor = new champions.PADComboEditor();

        setLayout(new java.awt.GridBagLayout());

        challengerGroup.setLayout(new java.awt.BorderLayout());

        challengerGroup.setBorder(new javax.swing.border.TitledBorder("Grab to Escape From"));
        challengerGroup.add(comboEditor, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(challengerGroup, gridBagConstraints);

    }//GEN-END:initComponents
            
    /** Getter for property battleEvent.
     * @return Value of property battleEvent.
     */
    public BattleEvent getBattleEvent() {
        return battleEvent;
    }
    
    /** Setter for property battleEvent.
     * @param battleEvent New value of property battleEvent.
     */
    public void setBattleEvent(BattleEvent battleEvent) {
        this.battleEvent = battleEvent;
    }
    
    public void showPanel(AttackTreePanel atip) {
        this.atip = atip;
        setupPanel();
    }
    
    public JPanel getPanel() {
        return this;
    }
    
    public void hidePanel() {
        // When the panel is hidden, make sure you copy the values out
        if ( getBattleEvent() != null) {
            battleEvent.add( "Escape.GRABDESCRIPTION", getValue(), true );
        }
    }

    /** Setter for property list.
     * @param list New value of property list.
     */
    public void setList(Object[] list) {
        comboEditor.setOptions(list);
    }    
    
    /** Getter for property currentValue.
     * @return Value of property currentValue.
     */
    public Object getValue() {
        return comboEditor.getValue();
    }
    
    /** Setter for property currentValue.
     * @param currentValue New value of property currentValue.
     */
    public void setValue(Object currentValue) {
        comboEditor.setValue(currentValue);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private champions.PADComboEditor comboEditor;
    private javax.swing.JPanel challengerGroup;
    // End of variables declaration//GEN-END:variables

    
}
