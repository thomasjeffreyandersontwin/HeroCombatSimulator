/*
 * DefaultTreeTableFilterComponent.java
 *
 * Created on January 20, 2008, 12:30 PM
 */
package treeTable;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 *
 * @author  twalker
 */
public class DefaultTreeTableFilterComponent extends TreeTableFilterComponent
        implements ActionListener, FocusListener, KeyListener {

    /** Creates new form DefaultTreeTableFilterComponent */
    public DefaultTreeTableFilterComponent() {
        initComponents();

        filterTextField.setDocument(new FilteredTextDocument());

        filterTextField.addFocusListener(this);
        filterTextField.addActionListener(this);
        filterTextField.addKeyListener(this);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        filterTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Select:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(filterTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(filterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void actionPerformed(ActionEvent e) {
        fireFilterEvent(new TreeTableFilterEvent(this, TreeTableFilterEvent.FILTER_COMMITTED, filterTextField.getText()));

        getParent().requestFocusInWindow();
    }

    public void focusGained(FocusEvent e) {
    }

    public void focusLost(FocusEvent e) {
        setVisible(false);
    }

    public boolean requestFocusInWindow() {
        return filterTextField.requestFocusInWindow();
    }

    public void setFilter(Object filter) {
        String oldText = filterTextField.getText();
        String newText = null;

        if (filter instanceof java.lang.Character) {
            newText = new String(new char[]{(java.lang.Character) filter});
        }
        else if (filter instanceof String) {
            newText = (String) filter;
        }
        else {
            newText = "";
        }

        if (oldText != newText && (oldText == null || !oldText.equals(newText))) {
            filterTextField.setText(newText);

            if (newText.equals("")) {
                fireFilterEvent(new TreeTableFilterEvent(this, TreeTableFilterEvent.FILTER_CLEARED, newText));
            }
            else {
                fireFilterEvent(new TreeTableFilterEvent(this, TreeTableFilterEvent.FILTER_MODIFIED, newText));
            }
        }

    }

    public void keyTyped(KeyEvent e) {
    }

    public void keyPressed(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
            e.consume();
            setFilter("");
            getParent().requestFocusInWindow();
        }
    }

    public void keyReleased(KeyEvent e) {
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField filterTextField;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    public class FilteredTextDocument extends PlainDocument {

        public FilteredTextDocument() {
        }

        public void insertString(int offset, String string, AttributeSet attributes) throws BadLocationException {

            super.insertString(offset, string, attributes);

            handleDocumentChange();
        }

        public void remove(int offset, int length)
                throws BadLocationException {
            super.remove(offset, length);

            handleDocumentChange();
        }

        public void handleDocumentChange() {
            fireFilterEvent(new TreeTableFilterEvent(this, TreeTableFilterEvent.FILTER_MODIFIED, filterTextField.getText()));
        }
    }
}
